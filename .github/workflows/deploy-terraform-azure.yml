name: Deploy Azure Infrastructure with Terraform

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/azure/**'
      - 'k8s-app/kubernetes/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure Login with OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Configure OIDC Environment Variables
      run: |
        echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
        echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
        echo "TF_VAR_tls_certificate=${{ secrets.TLS_CERTIFICATE }}" >> $GITHUB_ENV
        echo "TF_VAR_tls_private_key=${{ secrets.TLS_PRIVATE_KEY }}" >> $GITHUB_ENV

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.5

    - name: Initialize Terraform
      run: |
        cd terraform/azure
        terraform init

    - name: Apply Terraform Configuration
      run: |
        cd terraform/azure
        terraform apply -auto-approve

    - name: Configure kubectl for AKS
      run: |
        az aks get-credentials --resource-group devsecops-lab-rg --name devsecops-aks --overwrite-existing

    - name: Create Kubernetes TLS Secret
      run: |
        kubectl create secret tls tls-secret \
        --cert="${{ secrets.TLS_CERTIFICATE }}" \
        --key="${{ secrets.TLS_PRIVATE_KEY }}" \
        --namespace default || echo "Secret already exists"

    - name: Deploy Kubernetes Service and Ingress
      run: |
        kubectl apply -f k8s-app/kubernetes/service.yaml
        kubectl apply -f k8s-app/kubernetes/ingress.yaml

    - name: Check Kubernetes Service, Ingress, and Secret
      run: |
        kubectl get services -A
        kubectl get ingress -A
        kubectl get secrets -A
