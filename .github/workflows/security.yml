name: Security Scans

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Run Super-Linter
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Super-Linter
        uses: super-linter/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sast:
    name: Run Semgrep SAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep Auto Scan
        run: semgrep --config=auto

      - name: Run Custom Security Rules
        run: |
          semgrep --config=.github/semgrep-rules/security-best-practices.yml
          semgrep --config=.github/semgrep-rules/terraform-security.yml

  dast:
    name: Run OWASP ZAP Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
  
      - name: Create Docker Network
        run: docker network create zap-network
  
      - name: Start My DevSecOps Web App
        run: |
          docker build -t my-devsecops-blog ./blog-app
          docker run -d --network zap-network --name blog-app -p 5000:5000 my-devsecops-blog
  
      - name: Wait for Web App to Start
        run: sleep 10  # Ensures app is ready
  
      - name: Run OWASP ZAP Baseline Scan
        continue-on-error: true
        run: |
          docker run --rm --network zap-network ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://blog-app:5000

  
